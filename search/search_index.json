{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 1. Theoretical Foundation Governing Equations of Motion To analyze projectile motion, we start with Newton\u2019s laws and decompose the motion into two perpendicular components: horizontal (x-axis) and vertical (y-axis). Assuming no air resistance and a flat surface, the equations of motion are: Horizontal motion: \\[ x(t) = v_0 \\cdot \\cos(\\theta) \\cdot t \\] Vertical motion: \\[ y(t) = v_0 \\cdot \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 \\] Where: - \\( v_0 \\) is the initial speed, - \\( \\theta \\) is the launch angle, - \\( g \\) is the acceleration due to gravity, - \\( t \\) is time. Time of Flight The projectile returns to the ground when its vertical position becomes zero: \\[ y(t) = 0 \\] Solving for \\( t \\) : \\[ t = \\frac{2v_0 \\cdot \\sin(\\theta)}{g} \\] This represents the total time of flight . Range of the Projectile Substitute the time of flight into the horizontal equation: \\[ R = v_0 \\cdot \\cos(\\theta) \\cdot \\frac{2v_0 \\cdot \\sin(\\theta)}{g} \\] Using the trigonometric identity \\( 2 \\cdot \\sin(\\theta) \\cdot \\cos(\\theta) = \\sin(2\\theta) \\) , we simplify: \\[ R = \\frac{v_0^2 \\cdot \\sin(2\\theta)}{g} \\] Family of Solutions This final equation shows that the range \\( R \\) depends on: - the square of the initial speed \\( v_0 \\) , - the sine of twice the launch angle \\( \\theta \\) , - and the gravitational acceleration \\( g \\) . For fixed \\( v_0 \\) and \\( g \\) , the range varies only with the launch angle , forming a family of solutions that can be explored analytically and computationally. 2. Analysis of the Range Behavior of the Range Function From the equation: \\[ R(\\theta) = \\frac{v_0^2 \\cdot \\sin(2\\theta)}{g} \\] we observe that the range \\( R \\) depends on the sine of twice the launch angle \\( \\theta \\) . This means: - The function \\( \\sin(2\\theta) \\) reaches its maximum value of 1 when \\( 2\\theta = 90^\\circ \\) , i.e. \\( \\theta = 45^\\circ \\) . - Therefore, the maximum range is achieved when the projectile is launched at an angle of 45\u00b0 . Symmetry in the Range The function \\( \\sin(2\\theta) \\) is symmetric around \\( \\theta = 45^\\circ \\) . This implies that: \\[ R(\\theta) = R(90^\\circ - \\theta) \\] Example: - A launch at \\( 30^\\circ \\) gives the same range as a launch at \\( 60^\\circ \\) . - Likewise, \\( 20^\\circ \\) and \\( 70^\\circ \\) give the same range. This symmetry creates pairs of angles with identical range values, despite different trajectories. Implications The same horizontal distance can be achieved with different angles, but: - Lower angles produce flatter, faster trajectories. - Higher angles result in higher arcs with longer air time. Visual Expectation A plot of \\( R(\\theta) \\) versus \\( \\theta \\) from \\( 0^\\circ \\) to \\( 90^\\circ \\) will form a symmetric curve , peaking at \\( 45^\\circ \\) . This provides a solid foundation for experimental simulation or numerical analysis to visualize this behavior. 3. Code Implementation To analyze the relationship between the launch angle and the projectile range, we simulate the motion using Python with numpy and matplotlib . Python Code import numpy as np import matplotlib.pyplot as plt # Constants v0 = 10 # initial velocity in m/s g = 9.8 # acceleration due to gravity in m/s^2 # Angle range from 0 to 90 degrees angles_deg = np.linspace(0, 90, 1000) angles_rad = np.deg2rad(angles_deg) # Range formula range_values = (v0**2 * np.sin(2 * angles_rad)) / g # Plotting plt.figure(figsize=(10, 6)) plt.plot(angles_deg, range_values, label='Range vs Angle', color='teal') plt.axvline(45, color='gray', linestyle='--', label='Maximum Range at 45\u00b0') plt.title('Projectile Range as a Function of Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.grid(True) plt.legend() plt.tight_layout() plt.show() 4. Graph and Interpretation Visualization Overview The plot generated by the simulation shows how the projectile range varies with respect to the launch angle \\( \\theta \\) from 0\u00b0 to 90\u00b0. Key observations: - The range increases as the angle increases from 0\u00b0 to 45\u00b0. - The maximum range is achieved at 45\u00b0 . - Beyond 45\u00b0, the range decreases symmetrically , approaching zero at 90\u00b0. - The plot is symmetric around 45\u00b0, confirming that: \\[ R(\\theta) = R(90^\\circ - \\theta) \\] This illustrates that different launch angles can result in the same horizontal distance but with different flight characteristics (trajectory height and flight time). Real-World Insight Such graphical analysis provides a deeper understanding of projectile motion: - In sports, optimizing throw or kick angles improves performance. - In engineering, ideal launch angles reduce energy costs or material usage. - In aerospace, it helps model ideal launch trajectories (neglecting drag). This visualization confirms the theoretical predictions and provides a strong foundation for exploring more complex or real-world scenarios in future sections. 5. Limitations and Further Improvements Idealized Assumptions This model makes several simplifying assumptions: - No air resistance : In reality, drag significantly affects the range, especially at higher velocities. - Launch from ground level : The model does not account for launches from elevated platforms or terrains. - Constant gravity : Gravitational acceleration is treated as constant, though it can vary slightly with altitude or location. - No wind or atmospheric effects : Wind direction and speed can greatly alter projectile behavior. Possible Extensions To increase realism, future versions of the model can include: - Air resistance (quadratic drag or using differential equations), - Launch from an arbitrary height, - Custom terrain elevation or slope, - Variable gravitational environments (e.g., other planets), - 3D projectile motion. These refinements make the model more applicable to engineering, aerospace, and defense systems where precision is critical.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#governing-equations-of-motion","text":"To analyze projectile motion, we start with Newton\u2019s laws and decompose the motion into two perpendicular components: horizontal (x-axis) and vertical (y-axis). Assuming no air resistance and a flat surface, the equations of motion are: Horizontal motion: \\[ x(t) = v_0 \\cdot \\cos(\\theta) \\cdot t \\] Vertical motion: \\[ y(t) = v_0 \\cdot \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 \\] Where: - \\( v_0 \\) is the initial speed, - \\( \\theta \\) is the launch angle, - \\( g \\) is the acceleration due to gravity, - \\( t \\) is time.","title":"Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight","text":"The projectile returns to the ground when its vertical position becomes zero: \\[ y(t) = 0 \\] Solving for \\( t \\) : \\[ t = \\frac{2v_0 \\cdot \\sin(\\theta)}{g} \\] This represents the total time of flight .","title":"Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-of-the-projectile","text":"Substitute the time of flight into the horizontal equation: \\[ R = v_0 \\cdot \\cos(\\theta) \\cdot \\frac{2v_0 \\cdot \\sin(\\theta)}{g} \\] Using the trigonometric identity \\( 2 \\cdot \\sin(\\theta) \\cdot \\cos(\\theta) = \\sin(2\\theta) \\) , we simplify: \\[ R = \\frac{v_0^2 \\cdot \\sin(2\\theta)}{g} \\]","title":"Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#family-of-solutions","text":"This final equation shows that the range \\( R \\) depends on: - the square of the initial speed \\( v_0 \\) , - the sine of twice the launch angle \\( \\theta \\) , - and the gravitational acceleration \\( g \\) . For fixed \\( v_0 \\) and \\( g \\) , the range varies only with the launch angle , forming a family of solutions that can be explored analytically and computationally.","title":"Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#behavior-of-the-range-function","text":"From the equation: \\[ R(\\theta) = \\frac{v_0^2 \\cdot \\sin(2\\theta)}{g} \\] we observe that the range \\( R \\) depends on the sine of twice the launch angle \\( \\theta \\) . This means: - The function \\( \\sin(2\\theta) \\) reaches its maximum value of 1 when \\( 2\\theta = 90^\\circ \\) , i.e. \\( \\theta = 45^\\circ \\) . - Therefore, the maximum range is achieved when the projectile is launched at an angle of 45\u00b0 .","title":"Behavior of the Range Function"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#symmetry-in-the-range","text":"The function \\( \\sin(2\\theta) \\) is symmetric around \\( \\theta = 45^\\circ \\) . This implies that: \\[ R(\\theta) = R(90^\\circ - \\theta) \\] Example: - A launch at \\( 30^\\circ \\) gives the same range as a launch at \\( 60^\\circ \\) . - Likewise, \\( 20^\\circ \\) and \\( 70^\\circ \\) give the same range. This symmetry creates pairs of angles with identical range values, despite different trajectories.","title":"Symmetry in the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#implications","text":"The same horizontal distance can be achieved with different angles, but: - Lower angles produce flatter, faster trajectories. - Higher angles result in higher arcs with longer air time.","title":"Implications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#visual-expectation","text":"A plot of \\( R(\\theta) \\) versus \\( \\theta \\) from \\( 0^\\circ \\) to \\( 90^\\circ \\) will form a symmetric curve , peaking at \\( 45^\\circ \\) . This provides a solid foundation for experimental simulation or numerical analysis to visualize this behavior.","title":"Visual Expectation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-code-implementation","text":"To analyze the relationship between the launch angle and the projectile range, we simulate the motion using Python with numpy and matplotlib .","title":"3. Code Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-code","text":"import numpy as np import matplotlib.pyplot as plt # Constants v0 = 10 # initial velocity in m/s g = 9.8 # acceleration due to gravity in m/s^2 # Angle range from 0 to 90 degrees angles_deg = np.linspace(0, 90, 1000) angles_rad = np.deg2rad(angles_deg) # Range formula range_values = (v0**2 * np.sin(2 * angles_rad)) / g # Plotting plt.figure(figsize=(10, 6)) plt.plot(angles_deg, range_values, label='Range vs Angle', color='teal') plt.axvline(45, color='gray', linestyle='--', label='Maximum Range at 45\u00b0') plt.title('Projectile Range as a Function of Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.grid(True) plt.legend() plt.tight_layout() plt.show()","title":"Python Code"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-graph-and-interpretation","text":"","title":"4. Graph and Interpretation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#visualization-overview","text":"The plot generated by the simulation shows how the projectile range varies with respect to the launch angle \\( \\theta \\) from 0\u00b0 to 90\u00b0. Key observations: - The range increases as the angle increases from 0\u00b0 to 45\u00b0. - The maximum range is achieved at 45\u00b0 . - Beyond 45\u00b0, the range decreases symmetrically , approaching zero at 90\u00b0. - The plot is symmetric around 45\u00b0, confirming that: \\[ R(\\theta) = R(90^\\circ - \\theta) \\] This illustrates that different launch angles can result in the same horizontal distance but with different flight characteristics (trajectory height and flight time).","title":"Visualization Overview"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#real-world-insight","text":"Such graphical analysis provides a deeper understanding of projectile motion: - In sports, optimizing throw or kick angles improves performance. - In engineering, ideal launch angles reduce energy costs or material usage. - In aerospace, it helps model ideal launch trajectories (neglecting drag). This visualization confirms the theoretical predictions and provides a strong foundation for exploring more complex or real-world scenarios in future sections.","title":"Real-World Insight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-limitations-and-further-improvements","text":"","title":"5. Limitations and Further Improvements"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#idealized-assumptions","text":"This model makes several simplifying assumptions: - No air resistance : In reality, drag significantly affects the range, especially at higher velocities. - Launch from ground level : The model does not account for launches from elevated platforms or terrains. - Constant gravity : Gravitational acceleration is treated as constant, though it can vary slightly with altitude or location. - No wind or atmospheric effects : Wind direction and speed can greatly alter projectile behavior.","title":"Idealized Assumptions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#possible-extensions","text":"To increase realism, future versions of the model can include: - Air resistance (quadratic drag or using differential equations), - Launch from an arbitrary height, - Custom terrain elevation or slope, - Variable gravitational environments (e.g., other planets), - 3D projectile motion. These refinements make the model more applicable to engineering, aerospace, and defense systems where precision is critical.","title":"Possible Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 1. Theoretical Foundation Governing Equation of Motion The motion of a forced damped pendulum is described by the second-order nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] Where: - \\( \\theta \\) \u2014 the angular displacement - \\( b \\) \u2014 the damping coefficient - \\( g \\) \u2014 the gravitational acceleration - \\( L \\) \u2014 the length of the pendulum - \\( A \\) \u2014 the amplitude of the external driving force - \\( \\omega \\) \u2014 the driving angular frequency - \\( t \\) \u2014 time Small-Angle Approximation For small angular displacements ( \\( \\theta \\) close to zero), we can approximate: \\[ \\sin(\\theta) \\approx \\theta \\] Substituting this into the governing equation gives: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\theta = A \\cos(\\omega t) \\] This simplifies the system to a linear second-order nonhomogeneous differential equation with constant coefficients. Interpretation of Terms The term \\( b\\frac{d\\theta}{dt} \\) represents energy dissipation due to damping. The term \\( \\frac{g}{L}\\theta \\) represents the restoring force due to gravity. The right-hand side \\( A\\cos(\\omega t) \\) represents an external periodic driving force . Depending on the values of \\( b \\) , \\( A \\) , and \\( \\omega \\) , the system can exhibit: Steady-state periodic motion Resonance phenomena Quasiperiodic or chaotic behavior Resonance Condition In the absence of damping and under the small-angle approximation, resonance occurs when the driving frequency \\( \\omega \\) matches the natural frequency \\( \\omega_0 \\) of the pendulum: \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] Under resonance: The amplitude of oscillations becomes significantly large. Energy transfer from the external driving force to the pendulum is maximized. However, real systems with damping exhibit limited amplitudes and more complex resonance behavior. 2. Analysis of Dynamics The behavior of the forced damped pendulum is strongly influenced by three key parameters: Damping coefficient ( \\( b \\) ) Higher damping leads to quicker energy dissipation, causing oscillations to decay faster. Lower damping allows oscillations to persist and can enable complex dynamics, including chaotic motion. Driving amplitude ( \\( A \\) ) A small driving amplitude results in regular, predictable oscillations. A larger driving amplitude can push the system into nonlinear and chaotic behavior. Driving frequency ( \\( \\omega \\) ) When the driving frequency approaches the system\u2019s natural frequency ( \\( \\omega_0 \\) ), resonance occurs, greatly amplifying oscillation amplitudes. Away from resonance, the response is much smaller. Transition from Regular to Chaotic Motion As the driving amplitude \\( A \\) or the driving frequency \\( \\omega \\) increases, the system exhibits the following transitions: Periodic motion Regular, repeating oscillations over time. Quasiperiodic motion Oscillations combining two or more frequencies, leading to a non-repeating but structured pattern. Chaotic motion Highly sensitive to initial conditions, with irregular, unpredictable behavior. Characterized by positive Lyapunov exponents and complex structures in phase space. 3. Practical Applications The forced damped pendulum model, while idealized, has important applications in various real-world systems where periodic driving and damping effects are present. Energy Harvesting Devices Systems such as piezoelectric energy harvesters rely on oscillations induced by ambient vibrations. Understanding resonance and damping helps optimize energy extraction. Suspension Bridges Suspension bridges are susceptible to wind-induced oscillations, which can lead to resonance phenomena. Proper damping mechanisms are critical to prevent catastrophic failures, such as the Tacoma Narrows Bridge collapse. Oscillating Electrical Circuits Driven RLC circuits (resistor-inductor-capacitor systems) behave analogously to forced damped pendulums. Analysis of resonance and damping is essential for the design of stable and efficient electronic systems. Biomechanics and Gait Analysis Human gait dynamics under external perturbations (e.g., uneven surfaces or wearable devices) can be modeled similarly. Damping and external forcing play roles in maintaining balance and stability. These practical examples demonstrate the relevance of the forced damped pendulum model beyond theoretical physics, providing insight into engineering, biomechanics, and energy systems. 4. Implementation To explore the behavior of the forced damped pendulum, we develop a computational model using Python. We use a numerical method, specifically the fourth-order Runge-Kutta method ( scipy.integrate.solve_ivp ), to solve the system of ordinary differential equations (ODEs). Mathematical Model The second-order differential equation describing the forced damped pendulum is: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] This can be rewritten as a system of two first-order equations: \\[ \\frac{d\\theta}{dt} = \\omega \\quad \\quad \\frac{d\\omega}{dt} = -b\\omega - \\frac{g}{L} \\sin(\\theta) + A \\cos(\\omega_{\\text{drive}} t) \\] where: - \\( \\theta \\) is the angular displacement, - \\( \\omega \\) is the angular velocity, - \\( b \\) is the damping coefficient, - \\( g \\) is the gravitational acceleration, - \\( L \\) is the length of the pendulum, - \\( A \\) is the amplitude of the external driving force, - \\( \\omega_{\\text{drive}} \\) is the driving angular frequency. Python Code import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters g = 9.8 # gravitational acceleration (m/s^2) L = 1.0 # length of pendulum (m) b = 0.2 # damping coefficient A = 1.2 # amplitude of driving force omega_drive = 2/3 # driving frequency (rad/s) # Time span t_span = (0, 60) t_eval = np.linspace(t_span[0], t_span[1], 1000) # System of equations def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g/L) * np.sin(theta) + A * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] # Initial conditions y0 = [0.2, 0.0] # Small initial angle, zero initial velocity # Solve ODE solution = solve_ivp(pendulum, t_span, y0, t_eval=t_eval, method='RK45') # Extract results theta = solution.y[0] omega = solution.y[1] time = solution.t # Normalize theta to [-pi, pi] theta = (theta + np.pi) % (2 * np.pi) - np.pi # Plotting plt.figure(figsize=(12, 6)) # Angle vs Time plt.subplot(2, 1, 1) plt.plot(time, theta, label='Theta (angle)') plt.xlabel('Time (s)') plt.ylabel('Angle (radians)') plt.title('Angle vs Time') plt.grid(True) plt.legend() # Phase Portrait plt.subplot(2, 1, 2) plt.plot(theta, omega, '.', markersize=1, label='Phase Portrait') plt.xlabel('Angle (radians)') plt.ylabel('Angular velocity (rad/s)') plt.title('Phase Portrait') plt.grid(True) plt.legend() plt.tight_layout() plt.show() Visualization Overview Angle vs Time Shows how the pendulum's angle evolves under the combined effects of damping and external forcing. Phase Portrait Plots angular velocity versus angle to visualize the dynamical behavior of the system. In chaotic regimes, the phase portrait appears scattered and complex. 6. Advanced Visualizations This section presents additional tools for analyzing the complex behavior of the forced damped pendulum. These include: Poincar\u00e9 sections : useful for visualizing transitions to chaos by sampling the phase space at regular intervals. Bifurcation diagrams : show how the system\u2019s behavior evolves as a parameter (typically the driving amplitude \\( A \\) ) changes. Poincar\u00e9 Section The Poincar\u00e9 section is constructed by sampling the state \\((\\theta, \\omega)\\) once per driving cycle: \\[ T = \\frac{2\\pi}{\\omega_{\\text{drive}}} \\] Only values at \\( t_n = nT \\) are recorded, providing a simplified view of the system's long-term behavior. # Define driving period T_drive = 2 * np.pi / omega_drive sample_times = np.arange(0, t_span[1], T_drive) # Solve the ODE with dense output solution_dense = solve_ivp(pendulum, t_span, y0, dense_output=True) # Sample at multiples of T poincare = solution_dense.sol(sample_times) theta_p = (poincare[0] + np.pi) % (2 * np.pi) - np.pi omega_p = poincare[1] # Plot Poincar\u00e9 section plt.figure(figsize=(6, 6)) plt.plot(theta_p, omega_p, 'o', markersize=2) plt.xlabel('Angle (radians)') plt.ylabel('Angular velocity (rad/s)') plt.title('Poincar\u00e9 Section') plt.grid(True) plt.show() Periodic motion produces discrete points. Quasiperiodic motion forms closed curves. Chaotic motion leads to scattered, dense regions. Bifurcation Diagram In this plot, the driving amplitude \\( A \\) is gradually varied. For each value, the system's angle is sampled once per cycle (after transients) to observe how behavior changes: A_values = np.linspace(1.0, 1.6, 200) theta_samples = [] for A_current in A_values: def pendulum_A(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g/L) * np.sin(theta) + A_current * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] sol = solve_ivp(pendulum_A, (0, 300), y0, dense_output=True) # Sample last 50 cycles after transient T = 2 * np.pi / omega_drive times = np.arange(250, 300, T) sampled = sol.sol(times) thetas = (sampled[0] + np.pi) % (2 * np.pi) - np.pi theta_samples.append(thetas) # Plot bifurcation diagram plt.figure(figsize=(10, 6)) for i, A_val in enumerate(A_values): plt.plot([A_val]*len(theta_samples[i]), theta_samples[i], ',k') plt.xlabel('Driving Amplitude (A)') plt.ylabel('Angle (radians)') plt.title('Bifurcation Diagram') plt.grid(True) plt.show() The diagram shows stable periodic orbits, period doubling bifurcations, and transitions to chaos as \\( A \\) increases. Summary These advanced visualizations help identify and classify dynamic regimes: Phase portraits : visualize continuous trajectories. Poincar\u00e9 sections : reduce dimensionality, reveal structure. Bifurcation diagrams : track system response to parameter changes. Together, they provide powerful insight into nonlinear dynamics and chaotic systems.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation-of-motion","text":"The motion of a forced damped pendulum is described by the second-order nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] Where: - \\( \\theta \\) \u2014 the angular displacement - \\( b \\) \u2014 the damping coefficient - \\( g \\) \u2014 the gravitational acceleration - \\( L \\) \u2014 the length of the pendulum - \\( A \\) \u2014 the amplitude of the external driving force - \\( \\omega \\) \u2014 the driving angular frequency - \\( t \\) \u2014 time","title":"Governing Equation of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small angular displacements ( \\( \\theta \\) close to zero), we can approximate: \\[ \\sin(\\theta) \\approx \\theta \\] Substituting this into the governing equation gives: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\theta = A \\cos(\\omega t) \\] This simplifies the system to a linear second-order nonhomogeneous differential equation with constant coefficients.","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#interpretation-of-terms","text":"The term \\( b\\frac{d\\theta}{dt} \\) represents energy dissipation due to damping. The term \\( \\frac{g}{L}\\theta \\) represents the restoring force due to gravity. The right-hand side \\( A\\cos(\\omega t) \\) represents an external periodic driving force . Depending on the values of \\( b \\) , \\( A \\) , and \\( \\omega \\) , the system can exhibit: Steady-state periodic motion Resonance phenomena Quasiperiodic or chaotic behavior","title":"Interpretation of Terms"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-condition","text":"In the absence of damping and under the small-angle approximation, resonance occurs when the driving frequency \\( \\omega \\) matches the natural frequency \\( \\omega_0 \\) of the pendulum: \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] Under resonance: The amplitude of oscillations becomes significantly large. Energy transfer from the external driving force to the pendulum is maximized. However, real systems with damping exhibit limited amplitudes and more complex resonance behavior.","title":"Resonance Condition"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"The behavior of the forced damped pendulum is strongly influenced by three key parameters: Damping coefficient ( \\( b \\) ) Higher damping leads to quicker energy dissipation, causing oscillations to decay faster. Lower damping allows oscillations to persist and can enable complex dynamics, including chaotic motion. Driving amplitude ( \\( A \\) ) A small driving amplitude results in regular, predictable oscillations. A larger driving amplitude can push the system into nonlinear and chaotic behavior. Driving frequency ( \\( \\omega \\) ) When the driving frequency approaches the system\u2019s natural frequency ( \\( \\omega_0 \\) ), resonance occurs, greatly amplifying oscillation amplitudes. Away from resonance, the response is much smaller.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#transition-from-regular-to-chaotic-motion","text":"As the driving amplitude \\( A \\) or the driving frequency \\( \\omega \\) increases, the system exhibits the following transitions: Periodic motion Regular, repeating oscillations over time. Quasiperiodic motion Oscillations combining two or more frequencies, leading to a non-repeating but structured pattern. Chaotic motion Highly sensitive to initial conditions, with irregular, unpredictable behavior. Characterized by positive Lyapunov exponents and complex structures in phase space.","title":"Transition from Regular to Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"The forced damped pendulum model, while idealized, has important applications in various real-world systems where periodic driving and damping effects are present.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#energy-harvesting-devices","text":"Systems such as piezoelectric energy harvesters rely on oscillations induced by ambient vibrations. Understanding resonance and damping helps optimize energy extraction.","title":"Energy Harvesting Devices"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#suspension-bridges","text":"Suspension bridges are susceptible to wind-induced oscillations, which can lead to resonance phenomena. Proper damping mechanisms are critical to prevent catastrophic failures, such as the Tacoma Narrows Bridge collapse.","title":"Suspension Bridges"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#oscillating-electrical-circuits","text":"Driven RLC circuits (resistor-inductor-capacitor systems) behave analogously to forced damped pendulums. Analysis of resonance and damping is essential for the design of stable and efficient electronic systems.","title":"Oscillating Electrical Circuits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#biomechanics-and-gait-analysis","text":"Human gait dynamics under external perturbations (e.g., uneven surfaces or wearable devices) can be modeled similarly. Damping and external forcing play roles in maintaining balance and stability. These practical examples demonstrate the relevance of the forced damped pendulum model beyond theoretical physics, providing insight into engineering, biomechanics, and energy systems.","title":"Biomechanics and Gait Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation","text":"To explore the behavior of the forced damped pendulum, we develop a computational model using Python. We use a numerical method, specifically the fourth-order Runge-Kutta method ( scipy.integrate.solve_ivp ), to solve the system of ordinary differential equations (ODEs).","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#mathematical-model","text":"The second-order differential equation describing the forced damped pendulum is: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] This can be rewritten as a system of two first-order equations: \\[ \\frac{d\\theta}{dt} = \\omega \\quad \\quad \\frac{d\\omega}{dt} = -b\\omega - \\frac{g}{L} \\sin(\\theta) + A \\cos(\\omega_{\\text{drive}} t) \\] where: - \\( \\theta \\) is the angular displacement, - \\( \\omega \\) is the angular velocity, - \\( b \\) is the damping coefficient, - \\( g \\) is the gravitational acceleration, - \\( L \\) is the length of the pendulum, - \\( A \\) is the amplitude of the external driving force, - \\( \\omega_{\\text{drive}} \\) is the driving angular frequency.","title":"Mathematical Model"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#python-code","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters g = 9.8 # gravitational acceleration (m/s^2) L = 1.0 # length of pendulum (m) b = 0.2 # damping coefficient A = 1.2 # amplitude of driving force omega_drive = 2/3 # driving frequency (rad/s) # Time span t_span = (0, 60) t_eval = np.linspace(t_span[0], t_span[1], 1000) # System of equations def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g/L) * np.sin(theta) + A * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] # Initial conditions y0 = [0.2, 0.0] # Small initial angle, zero initial velocity # Solve ODE solution = solve_ivp(pendulum, t_span, y0, t_eval=t_eval, method='RK45') # Extract results theta = solution.y[0] omega = solution.y[1] time = solution.t # Normalize theta to [-pi, pi] theta = (theta + np.pi) % (2 * np.pi) - np.pi # Plotting plt.figure(figsize=(12, 6)) # Angle vs Time plt.subplot(2, 1, 1) plt.plot(time, theta, label='Theta (angle)') plt.xlabel('Time (s)') plt.ylabel('Angle (radians)') plt.title('Angle vs Time') plt.grid(True) plt.legend() # Phase Portrait plt.subplot(2, 1, 2) plt.plot(theta, omega, '.', markersize=1, label='Phase Portrait') plt.xlabel('Angle (radians)') plt.ylabel('Angular velocity (rad/s)') plt.title('Phase Portrait') plt.grid(True) plt.legend() plt.tight_layout() plt.show()","title":"Python Code"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#visualization-overview","text":"Angle vs Time Shows how the pendulum's angle evolves under the combined effects of damping and external forcing. Phase Portrait Plots angular velocity versus angle to visualize the dynamical behavior of the system. In chaotic regimes, the phase portrait appears scattered and complex.","title":"Visualization Overview"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-advanced-visualizations","text":"This section presents additional tools for analyzing the complex behavior of the forced damped pendulum. These include: Poincar\u00e9 sections : useful for visualizing transitions to chaos by sampling the phase space at regular intervals. Bifurcation diagrams : show how the system\u2019s behavior evolves as a parameter (typically the driving amplitude \\( A \\) ) changes.","title":"6. Advanced Visualizations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#poincare-section","text":"The Poincar\u00e9 section is constructed by sampling the state \\((\\theta, \\omega)\\) once per driving cycle: \\[ T = \\frac{2\\pi}{\\omega_{\\text{drive}}} \\] Only values at \\( t_n = nT \\) are recorded, providing a simplified view of the system's long-term behavior. # Define driving period T_drive = 2 * np.pi / omega_drive sample_times = np.arange(0, t_span[1], T_drive) # Solve the ODE with dense output solution_dense = solve_ivp(pendulum, t_span, y0, dense_output=True) # Sample at multiples of T poincare = solution_dense.sol(sample_times) theta_p = (poincare[0] + np.pi) % (2 * np.pi) - np.pi omega_p = poincare[1] # Plot Poincar\u00e9 section plt.figure(figsize=(6, 6)) plt.plot(theta_p, omega_p, 'o', markersize=2) plt.xlabel('Angle (radians)') plt.ylabel('Angular velocity (rad/s)') plt.title('Poincar\u00e9 Section') plt.grid(True) plt.show() Periodic motion produces discrete points. Quasiperiodic motion forms closed curves. Chaotic motion leads to scattered, dense regions.","title":"Poincar\u00e9 Section"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#bifurcation-diagram","text":"In this plot, the driving amplitude \\( A \\) is gradually varied. For each value, the system's angle is sampled once per cycle (after transients) to observe how behavior changes: A_values = np.linspace(1.0, 1.6, 200) theta_samples = [] for A_current in A_values: def pendulum_A(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g/L) * np.sin(theta) + A_current * np.cos(omega_drive * t) return [dtheta_dt, domega_dt] sol = solve_ivp(pendulum_A, (0, 300), y0, dense_output=True) # Sample last 50 cycles after transient T = 2 * np.pi / omega_drive times = np.arange(250, 300, T) sampled = sol.sol(times) thetas = (sampled[0] + np.pi) % (2 * np.pi) - np.pi theta_samples.append(thetas) # Plot bifurcation diagram plt.figure(figsize=(10, 6)) for i, A_val in enumerate(A_values): plt.plot([A_val]*len(theta_samples[i]), theta_samples[i], ',k') plt.xlabel('Driving Amplitude (A)') plt.ylabel('Angle (radians)') plt.title('Bifurcation Diagram') plt.grid(True) plt.show() The diagram shows stable periodic orbits, period doubling bifurcations, and transitions to chaos as \\( A \\) increases.","title":"Bifurcation Diagram"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#summary","text":"These advanced visualizations help identify and classify dynamic regimes: Phase portraits : visualize continuous trajectories. Poincar\u00e9 sections : reduce dimensionality, reveal structure. Bifurcation diagrams : track system response to parameter changes. Together, they provide powerful insight into nonlinear dynamics and chaotic systems.","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 1. Theoretical Foundation Newtonian Derivation of Kepler\u2019s Third Law for Circular Orbits To derive the relationship between the square of the orbital period \\( T \\) and the cube of the orbital radius \\( r \\) , we begin with Newton\u2019s law of universal gravitation and the centripetal force required for circular motion. Step 1: Gravitational Force According to Newton's law: \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] where: - \\( G \\) is the gravitational constant, - \\( M \\) is the mass of the central body (e.g., the Sun), - \\( m \\) is the mass of the orbiting body, - \\( r \\) is the orbital radius. Step 2: Centripetal Force For uniform circular motion: \\[ F_{\\text{centripetal}} = \\frac{m v^2}{r} \\] Setting the gravitational force equal to the centripetal force: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] Canceling \\( m \\) and solving for \\( v \\) : \\[ v^2 = \\frac{G M}{r} \\] Step 3: Orbital Period The orbital period \\( T \\) is related to the orbital speed and circumference: \\[ T = \\frac{2\\pi r}{v} \\quad \\Rightarrow \\quad v = \\frac{2\\pi r}{T} \\] Substitute into the equation for \\( v^2 \\) : \\[ \\left( \\frac{2\\pi r}{T} \\right)^2 = \\frac{G M}{r} \\] \\[ \\frac{4\\pi^2 r^2}{T^2} = \\frac{G M}{r} \\] Multiply both sides by \\( r \\) : \\[ \\frac{4\\pi^2 r^3}{T^2} = G M \\] Now solve for \\( T^2 \\) : \\[ T^2 = \\frac{4\\pi^2}{G M} \\cdot r^3 \\] Final Result This is Kepler\u2019s Third Law for circular orbits: \\[ T^2 \\propto r^3 \\] The constant of proportionality depends on the gravitational constant and the mass of the central body: \\[ T^2 = k r^3 \\quad \\text{where} \\quad k = \\frac{4\\pi^2}{G M} \\] This result explains why planets farther from the Sun take longer to orbit and provides a way to infer masses of celestial bodies from orbital data. 2. Implications for Astronomy Kepler\u2019s Third Law has profound implications for modern astronomy. Once the relationship \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] is established, it becomes a powerful tool for determining the mass of a central object or the distance to an orbiting body . 1. Calculating Mass from Orbital Motion By observing a satellite\u2019s orbital radius \\( r \\) and period \\( T \\) , we can calculate the mass \\( M \\) of the central object using: \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] This method is commonly used to estimate: The mass of the Earth from Moon\u2019s orbit, The mass of the Sun from planetary orbits, The mass of exoplanet host stars . 2. Determining Orbital Radius If the mass \\( M \\) of the central body is known (e.g., from spectroscopy), we can rearrange Kepler\u2019s Law to compute the orbital radius: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] This is used in: Satellite orbit design (e.g., geostationary satellites), Calculating the distance between binary stars, Estimating distances in planetary systems. 3. Astronomical Units and Simplified Forms In the Solar System, if we express: - \\( T \\) in Earth years, - \\( r \\) in astronomical units (AU), - \\( M \\) in solar masses, then the proportionality constant becomes 1: \\[ T^2 = r^3 \\] This simplification is frequently used in exoplanet detection , where observational data provides \\( T \\) , and \\( r \\) is inferred under this assumption. Summary Kepler\u2019s Third Law serves as: A cornerstone for measuring planetary systems , A practical method for estimating masses and distances , A theoretical link between Newtonian gravity and orbital dynamics . 3. Real-World Examples Kepler\u2019s Third Law can be directly applied to real celestial systems. Below are classic examples demonstrating its use. 1. The Moon\u2019s Orbit Around Earth Orbital radius: \\( r \\approx 3.84 \\times 10^8 \\) meters Orbital period: \\( T \\approx 27.3 \\) days \\( \\approx 2.36 \\times 10^6 \\) seconds Using: \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] we can estimate Earth\u2019s mass: \\[ M \\approx \\frac{4\\pi^2 (3.84 \\times 10^8)^3}{(6.674 \\times 10^{-11})(2.36 \\times 10^6)^2} \\approx 5.97 \\times 10^{24} \\text{ kg} \\] \u2705 Matches accepted value for Earth\u2019s mass. 2. Geostationary Satellite A geostationary satellite orbits Earth once per sidereal day: \\( T = 86,164 \\) seconds \\( M_{\\text{Earth}} = 5.97 \\times 10^{24} \\text{ kg} \\) Solving for \\( r \\) : \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] \\[ r \\approx \\left( \\frac{(6.674 \\times 10^{-11})(5.97 \\times 10^{24})(86164)^2}{4\\pi^2} \\right)^{1/3} \\approx 4.22 \\times 10^7 \\text{ m} \\] \u2705 This is approximately 35,786 km above Earth's surface \u2014 the correct altitude for geostationary orbit. 3. Planets in the Solar System Using AU and years: Earth's orbit: \\( r = 1 \\) AU, \\( T = 1 \\) year Mars: \\( r \\approx 1.52 \\) AU \\[ T^2 = r^3 \\quad \\Rightarrow \\quad T_{\\text{Mars}} = \\sqrt{(1.52)^3} \\approx 1.88 \\text{ years} \\] \u2705 Matches the known orbital period of Mars. 4. Exoplanets Kepler\u2019s Third Law is routinely applied in detecting exoplanets: Transit timing gives \\( T \\) Stellar mass \\( M \\) known from spectral data \\( r \\) inferred via: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] This helps determine habitability zones , orbital stability , and even potential moons. Summary Kepler\u2019s Law is essential in: Satellite design and spaceflight, Measuring celestial masses, Understanding orbital dynamics from Earth to exoplanetary systems. 4. Implementation To verify Kepler\u2019s Third Law numerically, we simulate circular orbits of varying radii around a central mass and calculate the orbital periods for each case. Assumptions Circular, two-body orbits Central mass (e.g., the Sun): \\( M = 1.989 \\times 10^{30} \\text{ kg} \\) Only gravity provides the centripetal force Units: SI (meters, kilograms, seconds) Python Code import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 # gravitational constant M = 1.989e30 # mass of central body (Sun) # Orbital radii from 0.2 to 5 AU (converted to meters) AU = 1.496e11 radii_au = np.linspace(0.2, 5, 100) radii_m = radii_au * AU # Calculate periods using T = 2\u03c0 * sqrt(r^3 / GM) periods_s = 2 * np.pi * np.sqrt(radii_m**3 / (G * M)) periods_yr = periods_s / (60 * 60 * 24 * 365.25) # convert to years # Plot T^2 vs r^3 T_squared = periods_yr**2 r_cubed = radii_au**3 plt.figure(figsize=(8, 6)) plt.plot(r_cubed, T_squared, label='Simulated data', color='navy') plt.xlabel('$r^3$ (AU\u00b3)') plt.ylabel('$T^2$ (years\u00b2)') plt.title('Verification of Kepler\u2019s Third Law') plt.grid(True) plt.legend() plt.tight_layout() plt.show() Interpretation According to Kepler\u2019s Third Law, the relationship: \\[ T^2 = k r^3 \\] should produce a straight line when plotting \\( T^2 \\) versus \\( r^3 \\) . The resulting graph confirms a linear relationship \u2014 verifying Kepler\u2019s Law in the circular orbit case. Next Steps Try fitting a linear regression to estimate the constant \\( k \\) . Extend the simulation to include elliptical orbits using numerical integration. Visualize orbits using position updates (x, y) for better understanding of orbital paths. 5. Discussion: Beyond Circular Orbits Kepler\u2019s Third Law is exact only for circular orbits under the assumption of a point mass and no perturbations. However, it can be generalized to: 1. Elliptical Orbits For elliptical orbits, the law still holds if we replace the orbital radius \\( r \\) with the semi-major axis \\( a \\) : \\[ T^2 = \\frac{4\\pi^2}{G M} a^3 \\] This version applies to: Planets in the Solar System (e.g., Earth, Mars), Moons and satellites in non-circular trajectories, Binary star systems. \u2705 This form is still widely used in astrophysics. 2. Multi-body Systems In real systems, additional bodies influence motion: Jupiter perturbs asteroid orbits. The Moon\u2019s orbit is affected by the Sun (three-body dynamics). Exoplanet systems show resonance and chaos due to gravitational interactions. While Kepler\u2019s Law provides a starting point, numerical simulation is essential for precision modeling in multi-body systems. 3. Mass Distribution and Relativity If the central mass is not a point (e.g., a planet with uneven mass), corrections are needed. In strong gravitational fields, General Relativity replaces Newtonian gravity \u2014 leading to corrections like orbital precession (e.g., Mercury). 4. Space Missions and Orbit Design Kepler\u2019s Law is foundational for: Launching satellites into desired orbits, Predicting planetary positions for interplanetary transfers (e.g., Hohmann transfers), Estimating fuel usage and timing for maneuvers. Summary Kepler\u2019s Third Law: Remains a fundamental relationship in celestial mechanics, Can be generalized to elliptical orbits using semi-major axis, Requires refinement for real-world accuracy (perturbations, relativity, non-uniform mass). It is both an elegant mathematical law and a practical tool for engineers, astronomers, and mission designers.","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#newtonian-derivation-of-keplers-third-law-for-circular-orbits","text":"To derive the relationship between the square of the orbital period \\( T \\) and the cube of the orbital radius \\( r \\) , we begin with Newton\u2019s law of universal gravitation and the centripetal force required for circular motion.","title":"Newtonian Derivation of Kepler\u2019s Third Law for Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-1-gravitational-force","text":"According to Newton's law: \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] where: - \\( G \\) is the gravitational constant, - \\( M \\) is the mass of the central body (e.g., the Sun), - \\( m \\) is the mass of the orbiting body, - \\( r \\) is the orbital radius.","title":"Step 1: Gravitational Force"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-2-centripetal-force","text":"For uniform circular motion: \\[ F_{\\text{centripetal}} = \\frac{m v^2}{r} \\] Setting the gravitational force equal to the centripetal force: \\[ \\frac{G M m}{r^2} = \\frac{m v^2}{r} \\] Canceling \\( m \\) and solving for \\( v \\) : \\[ v^2 = \\frac{G M}{r} \\]","title":"Step 2: Centripetal Force"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-3-orbital-period","text":"The orbital period \\( T \\) is related to the orbital speed and circumference: \\[ T = \\frac{2\\pi r}{v} \\quad \\Rightarrow \\quad v = \\frac{2\\pi r}{T} \\] Substitute into the equation for \\( v^2 \\) : \\[ \\left( \\frac{2\\pi r}{T} \\right)^2 = \\frac{G M}{r} \\] \\[ \\frac{4\\pi^2 r^2}{T^2} = \\frac{G M}{r} \\] Multiply both sides by \\( r \\) : \\[ \\frac{4\\pi^2 r^3}{T^2} = G M \\] Now solve for \\( T^2 \\) : \\[ T^2 = \\frac{4\\pi^2}{G M} \\cdot r^3 \\]","title":"Step 3: Orbital Period"},{"location":"1%20Physics/2%20Gravity/Problem_1/#final-result","text":"This is Kepler\u2019s Third Law for circular orbits: \\[ T^2 \\propto r^3 \\] The constant of proportionality depends on the gravitational constant and the mass of the central body: \\[ T^2 = k r^3 \\quad \\text{where} \\quad k = \\frac{4\\pi^2}{G M} \\] This result explains why planets farther from the Sun take longer to orbit and provides a way to infer masses of celestial bodies from orbital data.","title":"Final Result"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-implications-for-astronomy","text":"Kepler\u2019s Third Law has profound implications for modern astronomy. Once the relationship \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] is established, it becomes a powerful tool for determining the mass of a central object or the distance to an orbiting body .","title":"2. Implications for Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-calculating-mass-from-orbital-motion","text":"By observing a satellite\u2019s orbital radius \\( r \\) and period \\( T \\) , we can calculate the mass \\( M \\) of the central object using: \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] This method is commonly used to estimate: The mass of the Earth from Moon\u2019s orbit, The mass of the Sun from planetary orbits, The mass of exoplanet host stars .","title":"1. Calculating Mass from Orbital Motion"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-determining-orbital-radius","text":"If the mass \\( M \\) of the central body is known (e.g., from spectroscopy), we can rearrange Kepler\u2019s Law to compute the orbital radius: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] This is used in: Satellite orbit design (e.g., geostationary satellites), Calculating the distance between binary stars, Estimating distances in planetary systems.","title":"2. Determining Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-astronomical-units-and-simplified-forms","text":"In the Solar System, if we express: - \\( T \\) in Earth years, - \\( r \\) in astronomical units (AU), - \\( M \\) in solar masses, then the proportionality constant becomes 1: \\[ T^2 = r^3 \\] This simplification is frequently used in exoplanet detection , where observational data provides \\( T \\) , and \\( r \\) is inferred under this assumption.","title":"3. Astronomical Units and Simplified Forms"},{"location":"1%20Physics/2%20Gravity/Problem_1/#summary","text":"Kepler\u2019s Third Law serves as: A cornerstone for measuring planetary systems , A practical method for estimating masses and distances , A theoretical link between Newtonian gravity and orbital dynamics .","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-real-world-examples","text":"Kepler\u2019s Third Law can be directly applied to real celestial systems. Below are classic examples demonstrating its use.","title":"3. Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-the-moons-orbit-around-earth","text":"Orbital radius: \\( r \\approx 3.84 \\times 10^8 \\) meters Orbital period: \\( T \\approx 27.3 \\) days \\( \\approx 2.36 \\times 10^6 \\) seconds Using: \\[ M = \\frac{4\\pi^2 r^3}{G T^2} \\] we can estimate Earth\u2019s mass: \\[ M \\approx \\frac{4\\pi^2 (3.84 \\times 10^8)^3}{(6.674 \\times 10^{-11})(2.36 \\times 10^6)^2} \\approx 5.97 \\times 10^{24} \\text{ kg} \\] \u2705 Matches accepted value for Earth\u2019s mass.","title":"1. The Moon\u2019s Orbit Around Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-geostationary-satellite","text":"A geostationary satellite orbits Earth once per sidereal day: \\( T = 86,164 \\) seconds \\( M_{\\text{Earth}} = 5.97 \\times 10^{24} \\text{ kg} \\) Solving for \\( r \\) : \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] \\[ r \\approx \\left( \\frac{(6.674 \\times 10^{-11})(5.97 \\times 10^{24})(86164)^2}{4\\pi^2} \\right)^{1/3} \\approx 4.22 \\times 10^7 \\text{ m} \\] \u2705 This is approximately 35,786 km above Earth's surface \u2014 the correct altitude for geostationary orbit.","title":"2. Geostationary Satellite"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-planets-in-the-solar-system","text":"Using AU and years: Earth's orbit: \\( r = 1 \\) AU, \\( T = 1 \\) year Mars: \\( r \\approx 1.52 \\) AU \\[ T^2 = r^3 \\quad \\Rightarrow \\quad T_{\\text{Mars}} = \\sqrt{(1.52)^3} \\approx 1.88 \\text{ years} \\] \u2705 Matches the known orbital period of Mars.","title":"3. Planets in the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-exoplanets","text":"Kepler\u2019s Third Law is routinely applied in detecting exoplanets: Transit timing gives \\( T \\) Stellar mass \\( M \\) known from spectral data \\( r \\) inferred via: \\[ r = \\left( \\frac{G M T^2}{4\\pi^2} \\right)^{1/3} \\] This helps determine habitability zones , orbital stability , and even potential moons.","title":"4. Exoplanets"},{"location":"1%20Physics/2%20Gravity/Problem_1/#summary_1","text":"Kepler\u2019s Law is essential in: Satellite design and spaceflight, Measuring celestial masses, Understanding orbital dynamics from Earth to exoplanetary systems.","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-implementation","text":"To verify Kepler\u2019s Third Law numerically, we simulate circular orbits of varying radii around a central mass and calculate the orbital periods for each case.","title":"4. Implementation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#assumptions","text":"Circular, two-body orbits Central mass (e.g., the Sun): \\( M = 1.989 \\times 10^{30} \\text{ kg} \\) Only gravity provides the centripetal force Units: SI (meters, kilograms, seconds)","title":"Assumptions"},{"location":"1%20Physics/2%20Gravity/Problem_1/#python-code","text":"import numpy as np import matplotlib.pyplot as plt # Constants G = 6.67430e-11 # gravitational constant M = 1.989e30 # mass of central body (Sun) # Orbital radii from 0.2 to 5 AU (converted to meters) AU = 1.496e11 radii_au = np.linspace(0.2, 5, 100) radii_m = radii_au * AU # Calculate periods using T = 2\u03c0 * sqrt(r^3 / GM) periods_s = 2 * np.pi * np.sqrt(radii_m**3 / (G * M)) periods_yr = periods_s / (60 * 60 * 24 * 365.25) # convert to years # Plot T^2 vs r^3 T_squared = periods_yr**2 r_cubed = radii_au**3 plt.figure(figsize=(8, 6)) plt.plot(r_cubed, T_squared, label='Simulated data', color='navy') plt.xlabel('$r^3$ (AU\u00b3)') plt.ylabel('$T^2$ (years\u00b2)') plt.title('Verification of Kepler\u2019s Third Law') plt.grid(True) plt.legend() plt.tight_layout() plt.show()","title":"Python Code"},{"location":"1%20Physics/2%20Gravity/Problem_1/#interpretation","text":"According to Kepler\u2019s Third Law, the relationship: \\[ T^2 = k r^3 \\] should produce a straight line when plotting \\( T^2 \\) versus \\( r^3 \\) . The resulting graph confirms a linear relationship \u2014 verifying Kepler\u2019s Law in the circular orbit case.","title":"Interpretation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#next-steps","text":"Try fitting a linear regression to estimate the constant \\( k \\) . Extend the simulation to include elliptical orbits using numerical integration. Visualize orbits using position updates (x, y) for better understanding of orbital paths.","title":"Next Steps"},{"location":"1%20Physics/2%20Gravity/Problem_1/#5-discussion-beyond-circular-orbits","text":"Kepler\u2019s Third Law is exact only for circular orbits under the assumption of a point mass and no perturbations. However, it can be generalized to:","title":"5. Discussion: Beyond Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-elliptical-orbits","text":"For elliptical orbits, the law still holds if we replace the orbital radius \\( r \\) with the semi-major axis \\( a \\) : \\[ T^2 = \\frac{4\\pi^2}{G M} a^3 \\] This version applies to: Planets in the Solar System (e.g., Earth, Mars), Moons and satellites in non-circular trajectories, Binary star systems. \u2705 This form is still widely used in astrophysics.","title":"1. Elliptical Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-multi-body-systems","text":"In real systems, additional bodies influence motion: Jupiter perturbs asteroid orbits. The Moon\u2019s orbit is affected by the Sun (three-body dynamics). Exoplanet systems show resonance and chaos due to gravitational interactions. While Kepler\u2019s Law provides a starting point, numerical simulation is essential for precision modeling in multi-body systems.","title":"2. Multi-body Systems"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-mass-distribution-and-relativity","text":"If the central mass is not a point (e.g., a planet with uneven mass), corrections are needed. In strong gravitational fields, General Relativity replaces Newtonian gravity \u2014 leading to corrections like orbital precession (e.g., Mercury).","title":"3. Mass Distribution and Relativity"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-space-missions-and-orbit-design","text":"Kepler\u2019s Law is foundational for: Launching satellites into desired orbits, Predicting planetary positions for interplanetary transfers (e.g., Hohmann transfers), Estimating fuel usage and timing for maneuvers.","title":"4. Space Missions and Orbit Design"},{"location":"1%20Physics/2%20Gravity/Problem_1/#summary_2","text":"Kepler\u2019s Third Law: Remains a fundamental relationship in celestial mechanics, Can be generalized to elliptical orbits using semi-major axis, Requires refinement for real-world accuracy (perturbations, relativity, non-uniform mass). It is both an elegant mathematical law and a practical tool for engineers, astronomers, and mission designers.","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2 1. Theoretical Foundation Cosmic velocities define the minimum speeds required to achieve specific goals in gravitational systems \u2014 from stable orbit to escaping the Solar System. First Cosmic Velocity ( \\( v_1 \\) ) \u2013 Orbital Velocity This is the minimum horizontal velocity required to maintain a stable circular orbit near the surface of a celestial body. \\[ v_1 = \\sqrt{\\frac{G M}{r}} \\] \\( G \\) \u2014 gravitational constant \\( M \\) \u2014 mass of the celestial body \\( r \\) \u2014 orbital radius (typically the radius of the planet for low Earth orbit) \u2705 A satellite launched at this speed will remain in free fall around the planet. Second Cosmic Velocity ( \\( v_2 \\) ) \u2013 Escape Velocity This is the minimum speed required to break free from the gravitational pull of a celestial body without further propulsion. \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] This velocity allows an object to reach infinity with zero final velocity . Used for missions leaving Earth toward the Moon, Mars, etc. \u2705 The spacecraft overcomes gravitational binding energy. Third Cosmic Velocity ( \\( v_3 \\) ) \u2013 Interstellar Escape Velocity This is the minimum speed required to leave the entire Solar System from Earth\u2019s orbit, overcoming the Sun\u2019s gravitational field. Assuming a starting point at Earth's orbit (neglecting Earth's own gravity): \\[ v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\text{Earth}}}} \\] \\( M_{\\odot} \\) \u2014 mass of the Sun \\( r_{\\text{Earth}} \\) \u2014 Earth's orbital radius around the Sun To launch from Earth\u2019s surface and escape the Solar System, both Earth\u2019s gravity and orbital motion must be taken into account: \\[ v_3^{\\text{total}} = \\sqrt{v_{2,\\text{Earth}}^2 + v_3^2 - 2 v_{1,\\text{Earth}} v_3 \\cos(\\theta)} \\] \u2705 Often achieved through gravity assists and deep-space propulsion. Summary Velocity Meaning Formula \\( v_1 \\) Circular orbital velocity \\( \\sqrt{GM/r} \\) \\( v_2 \\) Escape from planet \\( \\sqrt{2GM/r} \\) \\( v_3 \\) Escape from star system \\( \\sqrt{2GM_{\\odot}/r} \\) These velocities form the foundation of orbital mechanics and are critical for mission planning, satellite deployment, and interplanetary navigation. 2. Mathematical Derivations and Dependencies The first, second, and third cosmic velocities are derived from Newton's law of universal gravitation and principles of conservation of energy . First Cosmic Velocity ( \\( v_1 \\) ) This is the orbital speed for a circular orbit just above the surface: From Newton\u2019s law of gravitation: \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] From Newton's second law (centripetal force): \\[ F = \\frac{m v^2}{r} \\] Equating the forces: \\[ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} \\Rightarrow v_1 = \\sqrt{\\frac{G M}{r}} \\] Second Cosmic Velocity ( \\( v_2 \\) ) This is derived from energy conservation : \\[ \\text{Initial total energy} = \\text{Final total energy} \\] \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\Rightarrow v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] Here: - The kinetic energy must exactly cancel the gravitational potential energy. - Final energy at infinity is zero. Third Cosmic Velocity ( \\( v_3 \\) ) To escape the Sun\u2019s gravity from Earth\u2019s orbit: \\[ E = \\frac{1}{2} m v_3^2 - \\frac{G M_{\\odot} m}{r_{\\text{Earth}}} = 0 \\Rightarrow v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\text{Earth}}}} \\] But if launched from Earth, must also overcome Earth\u2019s escape velocity \\( v_{2,\\text{Earth}} \\) . The actual total velocity depends on launch direction and existing orbital motion: \\[ v_3^{\\text{total}} = \\sqrt{v_2^2 + v_3^2 - 2 v_1 v_3 \\cos(\\theta)} \\] where: - \\( \\theta \\) is the angle between launch direction and Earth\u2019s orbital velocity vector. Parameter Dependencies Parameter Influence \\( M \\) \u2014 central mass All three velocities increase with mass \\( r \\) \u2014 orbital radius All velocities decrease with larger radius \\( G \\) \u2014 gravitational constant Appears in all expressions \\( \\theta \\) \u2014 launch angle (only for \\( v_3^{\\text{total}} \\) ) Affects net velocity due to vector addition These derivations form the basis for calculating required launch speeds, designing trajectories, and estimating fuel needs in orbital mechanics.","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#1-theoretical-foundation","text":"Cosmic velocities define the minimum speeds required to achieve specific goals in gravitational systems \u2014 from stable orbit to escaping the Solar System.","title":"1. Theoretical Foundation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-v_1-orbital-velocity","text":"This is the minimum horizontal velocity required to maintain a stable circular orbit near the surface of a celestial body. \\[ v_1 = \\sqrt{\\frac{G M}{r}} \\] \\( G \\) \u2014 gravitational constant \\( M \\) \u2014 mass of the celestial body \\( r \\) \u2014 orbital radius (typically the radius of the planet for low Earth orbit) \u2705 A satellite launched at this speed will remain in free fall around the planet.","title":"First Cosmic Velocity (\\( v_1 \\)) \u2013 Orbital Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-v_2-escape-velocity","text":"This is the minimum speed required to break free from the gravitational pull of a celestial body without further propulsion. \\[ v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] This velocity allows an object to reach infinity with zero final velocity . Used for missions leaving Earth toward the Moon, Mars, etc. \u2705 The spacecraft overcomes gravitational binding energy.","title":"Second Cosmic Velocity (\\( v_2 \\)) \u2013 Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#third-cosmic-velocity-v_3-interstellar-escape-velocity","text":"This is the minimum speed required to leave the entire Solar System from Earth\u2019s orbit, overcoming the Sun\u2019s gravitational field. Assuming a starting point at Earth's orbit (neglecting Earth's own gravity): \\[ v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\text{Earth}}}} \\] \\( M_{\\odot} \\) \u2014 mass of the Sun \\( r_{\\text{Earth}} \\) \u2014 Earth's orbital radius around the Sun To launch from Earth\u2019s surface and escape the Solar System, both Earth\u2019s gravity and orbital motion must be taken into account: \\[ v_3^{\\text{total}} = \\sqrt{v_{2,\\text{Earth}}^2 + v_3^2 - 2 v_{1,\\text{Earth}} v_3 \\cos(\\theta)} \\] \u2705 Often achieved through gravity assists and deep-space propulsion.","title":"Third Cosmic Velocity (\\( v_3 \\)) \u2013 Interstellar Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#summary","text":"Velocity Meaning Formula \\( v_1 \\) Circular orbital velocity \\( \\sqrt{GM/r} \\) \\( v_2 \\) Escape from planet \\( \\sqrt{2GM/r} \\) \\( v_3 \\) Escape from star system \\( \\sqrt{2GM_{\\odot}/r} \\) These velocities form the foundation of orbital mechanics and are critical for mission planning, satellite deployment, and interplanetary navigation.","title":"Summary"},{"location":"1%20Physics/2%20Gravity/Problem_2/#2-mathematical-derivations-and-dependencies","text":"The first, second, and third cosmic velocities are derived from Newton's law of universal gravitation and principles of conservation of energy .","title":"2. Mathematical Derivations and Dependencies"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-v_1","text":"This is the orbital speed for a circular orbit just above the surface: From Newton\u2019s law of gravitation: \\[ F_{\\text{gravity}} = \\frac{G M m}{r^2} \\] From Newton's second law (centripetal force): \\[ F = \\frac{m v^2}{r} \\] Equating the forces: \\[ \\frac{G M m}{r^2} = \\frac{m v_1^2}{r} \\Rightarrow v_1 = \\sqrt{\\frac{G M}{r}} \\]","title":"First Cosmic Velocity (\\( v_1 \\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-v_2","text":"This is derived from energy conservation : \\[ \\text{Initial total energy} = \\text{Final total energy} \\] \\[ \\frac{1}{2} m v_2^2 - \\frac{G M m}{r} = 0 \\Rightarrow v_2 = \\sqrt{\\frac{2 G M}{r}} = \\sqrt{2} \\cdot v_1 \\] Here: - The kinetic energy must exactly cancel the gravitational potential energy. - Final energy at infinity is zero.","title":"Second Cosmic Velocity (\\( v_2 \\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#third-cosmic-velocity-v_3","text":"To escape the Sun\u2019s gravity from Earth\u2019s orbit: \\[ E = \\frac{1}{2} m v_3^2 - \\frac{G M_{\\odot} m}{r_{\\text{Earth}}} = 0 \\Rightarrow v_3 = \\sqrt{\\frac{2 G M_{\\odot}}{r_{\\text{Earth}}}} \\] But if launched from Earth, must also overcome Earth\u2019s escape velocity \\( v_{2,\\text{Earth}} \\) . The actual total velocity depends on launch direction and existing orbital motion: \\[ v_3^{\\text{total}} = \\sqrt{v_2^2 + v_3^2 - 2 v_1 v_3 \\cos(\\theta)} \\] where: - \\( \\theta \\) is the angle between launch direction and Earth\u2019s orbital velocity vector.","title":"Third Cosmic Velocity (\\( v_3 \\))"},{"location":"1%20Physics/2%20Gravity/Problem_2/#parameter-dependencies","text":"Parameter Influence \\( M \\) \u2014 central mass All three velocities increase with mass \\( r \\) \u2014 orbital radius All velocities decrease with larger radius \\( G \\) \u2014 gravitational constant Appears in all expressions \\( \\theta \\) \u2014 launch angle (only for \\( v_3^{\\text{total}} \\) ) Affects net velocity due to vector addition These derivations form the basis for calculating required launch speeds, designing trajectories, and estimating fuel needs in orbital mechanics.","title":"Parameter Dependencies"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}